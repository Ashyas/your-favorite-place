{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ash\\\\Desktop\\\\React\\\\your-favorite-place\\\\Front End\\\\src\\\\shared\\\\components\\\\FormElements\\\\Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from \"react\";\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    case 'TOUCH':\n      return { ...state,\n        isTouched: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n  const {\n    id,\n    onInput\n  } = props;\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element = props.element === 'input' ? /*#__PURE__*/_jsxDEV(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.id,\n    rows: props.rowa || 4,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 13\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), element, !inputState.isValid && inputState.isTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 61\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Input, \"gH76Dbt2/RYW6uIZ6YtLz9FreRA=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useReducer","useEffect","validate","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","inputState","dispatch","initialValue","initialValid","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","rowa","label","errorText"],"sources":["C:/Users/Ash/Desktop/React/your-favorite-place/Front End/src/shared/components/FormElements/Input.js"],"sourcesContent":["import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n    \r\n    switch (action.type) {\r\n        case 'CHANGE' :\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n        case 'TOUCH' :\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst Input = props =>{\r\n    const [inputState, dispatch] = useReducer(inputReducer, \r\n        {value: props.initialValue || '', \r\n        isTouched: false, \r\n        isValid: props.initialValid || false\r\n    });\r\n\r\n    const {id, onInput} = props;\r\n    const {value, isValid} = inputState;\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput]);\r\n\r\n    const changeHandler = event =>{\r\n        dispatch({type: 'CHANGE', val: event.target.value, validators: props.validators});\r\n    };\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: 'TOUCH'\r\n        });\r\n    }\r\n\r\n    const element = (\r\n        props.element === 'input' ? \r\n            <input \r\n                id={props.id} \r\n                type={props.type} \r\n                placeholder={props.placeholder} \r\n                onChange={changeHandler}\r\n                onBlur={touchHandler}\r\n                value={inputState.value}\r\n            /> :\r\n            <textarea \r\n                id={props.id} \r\n                rows={props.rowa || 4} \r\n                onChange={changeHandler}\r\n                onBlur={touchHandler}\r\n                value={inputState.value} \r\n            />\r\n    );\r\n\r\n    return (\r\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n            {element}\r\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAO,aAAP;;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAEpC,QAAQA,MAAM,CAACC,IAAf;IACI,KAAK,QAAL;MACI,OAAO,EACH,GAAGF,KADA;QAEHG,KAAK,EAAEF,MAAM,CAACG,GAFX;QAGHC,OAAO,EAAEP,QAAQ,CAACG,MAAM,CAACG,GAAR,EAAaH,MAAM,CAACK,UAApB;MAHd,CAAP;;IAKJ,KAAK,OAAL;MACI,OAAO,EACH,GAAGN,KADA;QAEHO,SAAS,EAAE;MAFR,CAAP;;IAIJ;MACI,OAAOP,KAAP;EAbR;AAeH,CAjBD;;AAmBA,MAAMQ,KAAK,GAAGC,KAAK,IAAG;EAAA;;EAClB,MAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBf,UAAU,CAACG,YAAD,EACrC;IAACI,KAAK,EAAEM,KAAK,CAACG,YAAN,IAAsB,EAA9B;IACAL,SAAS,EAAE,KADX;IAEAF,OAAO,EAAEI,KAAK,CAACI,YAAN,IAAsB;EAF/B,CADqC,CAAzC;EAMA,MAAM;IAACC,EAAD;IAAKC;EAAL,IAAgBN,KAAtB;EACA,MAAM;IAACN,KAAD;IAAQE;EAAR,IAAmBK,UAAzB;EACAb,SAAS,CAAC,MAAM;IACZkB,OAAO,CAACD,EAAD,EAAKX,KAAL,EAAYE,OAAZ,CAAP;EACH,CAFQ,EAEN,CAACS,EAAD,EAAKX,KAAL,EAAYE,OAAZ,EAAqBU,OAArB,CAFM,CAAT;;EAIA,MAAMC,aAAa,GAAGC,KAAK,IAAG;IAC1BN,QAAQ,CAAC;MAACT,IAAI,EAAE,QAAP;MAAiBE,GAAG,EAAEa,KAAK,CAACC,MAAN,CAAaf,KAAnC;MAA0CG,UAAU,EAAEG,KAAK,CAACH;IAA5D,CAAD,CAAR;EACH,CAFD;;EAIA,MAAMa,YAAY,GAAG,MAAM;IACvBR,QAAQ,CAAC;MACLT,IAAI,EAAE;IADD,CAAD,CAAR;EAGH,CAJD;;EAMA,MAAMkB,OAAO,GACTX,KAAK,CAACW,OAAN,KAAkB,OAAlB,gBACI;IACI,EAAE,EAAEX,KAAK,CAACK,EADd;IAEI,IAAI,EAAEL,KAAK,CAACP,IAFhB;IAGI,WAAW,EAAEO,KAAK,CAACY,WAHvB;IAII,QAAQ,EAAEL,aAJd;IAKI,MAAM,EAAEG,YALZ;IAMI,KAAK,EAAET,UAAU,CAACP;EANtB;IAAA;IAAA;IAAA;EAAA,QADJ,gBASI;IACI,EAAE,EAAEM,KAAK,CAACK,EADd;IAEI,IAAI,EAAEL,KAAK,CAACa,IAAN,IAAc,CAFxB;IAGI,QAAQ,EAAEN,aAHd;IAII,MAAM,EAAEG,YAJZ;IAKI,KAAK,EAAET,UAAU,CAACP;EALtB;IAAA;IAAA;IAAA;EAAA,QAVR;EAmBA,oBACI;IAAK,SAAS,EAAG,gBAAe,CAACO,UAAU,CAACL,OAAZ,IAAuBK,UAAU,CAACH,SAAlC,IAA+C,uBAAwB,EAAvG;IAAA,wBACI;MAAO,OAAO,EAAEE,KAAK,CAACK,EAAtB;MAAA,UAA2BL,KAAK,CAACc;IAAjC;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKH,OAFL,EAGK,CAACV,UAAU,CAACL,OAAZ,IAAuBK,UAAU,CAACH,SAAlC,iBAA+C;MAAA,UAAIE,KAAK,CAACe;IAAV;MAAA;MAAA;MAAA;IAAA,QAHpD;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAjDD;;GAAMhB,K;;KAAAA,K;AAmDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}