{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ash\\\\Desktop\\\\React\\\\your-favorite-place\\\\Front End\\\\src\\\\users\\\\pages\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport LoadingSpinner from \"../../../shared/components/UiElements/LoadingSpinner\";\nimport ImageUplaod from \"../../../shared/components/FormElements/ImageUplaod\";\nimport ErrorModal from \"../../../shared/components/UiElements/ErrorModal\";\nimport Button from \"../../../shared/components/FormElements/Button\";\nimport Input from \"../../../shared/components/FormElements/Input\";\nimport { AuthContext } from \"../../../shared/contex/auth-context\";\nimport { useHttpClient } from \"../../../shared/hooks/http-hook\";\nimport Card from \"../../../shared/components/UiElements/Card\";\nimport { useForm } from \"../../../shared/hooks/form-hook\";\nimport \"./Auth.css\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../../shared/util/validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setLoginMode] = useState(true);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    const userEmail = formState.inputs.email.value;\n    const userPassword = formState.inputs.password.value;\n    let responseData;\n\n    if (isLoginMode) {\n      try {\n        responseData = await sendRequest(\"http://localhost:5000/api/users/login\", \"POST\", JSON.stringify({\n          email: userEmail,\n          password: userPassword\n        }), {\n          \"content-Type\": \"application/json\"\n        });\n      } catch (error) {}\n    } else {\n      try {\n        const userName = formState.inputs.name.value;\n        const userImage = formState.inputs.image.value;\n        const formData = new FormData();\n        formData.append('name', userName);\n        formData.append('email', userEmail);\n        formData.append('password', userPassword);\n        formData.append('image', userImage);\n        responseData = await sendRequest(\"http://localhost:5000/api/users/signup\", \"POST\", formData);\n      } catch (error) {}\n    }\n\n    auth.login(responseData.user.id);\n  };\n\n  const onSwitchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined,\n        image: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: \"\",\n          isValid: false\n        },\n        image: {\n          value: null,\n          isValid: false\n        }\n      }, false);\n    }\n\n    setLoginMode(prev => !prev);\n  };\n\n  const errorHandler = () => {\n    clearError();\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"authentication\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", isLoginMode ? \"Login\" : \"Sign Up\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authSubmitHandler,\n        children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          type: \"text\",\n          id: \"name\",\n          label: \"Full Name\",\n          validators: [VALIDATOR_REQUIRE()],\n          errorText: \"Please enter your a name\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), !isLoginMode && /*#__PURE__*/_jsxDEV(ImageUplaod, {\n          center: true,\n          onInput: inputHandler,\n          id: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          type: \"email\",\n          id: \"email\",\n          label: \"E-Mail\",\n          validators: [VALIDATOR_EMAIL()],\n          errorText: \"Please enter a valid email\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"password\",\n          type: \"password\",\n          label: \"Password\",\n          validators: [VALIDATOR_MINLENGTH(6)],\n          errorText: \"Please enter a valid password. min 6 characters\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !formState.isValid,\n          type: \"submit\",\n          children: !isLoginMode ? \"Sign Up\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        inverse: true,\n        onClick: onSwitchModeHandler,\n        children: [\"Switch to \", isLoginMode ? \"Sign Up\" : \"Login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"PtYtrGO/yq6Cbr1fznI3OZyMRfE=\", false, function () {\n  return [useHttpClient, useForm];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useContext","LoadingSpinner","ImageUplaod","ErrorModal","Button","Input","AuthContext","useHttpClient","Card","useForm","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Auth","auth","isLoginMode","setLoginMode","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","email","value","isValid","password","authSubmitHandler","event","preventDefault","userEmail","inputs","userPassword","responseData","JSON","stringify","userName","name","userImage","image","formData","FormData","append","login","user","id","onSwitchModeHandler","undefined","prev","errorHandler"],"sources":["C:/Users/Ash/Desktop/React/your-favorite-place/Front End/src/users/pages/Auth/Auth.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\n\r\nimport LoadingSpinner from \"../../../shared/components/UiElements/LoadingSpinner\";\r\nimport ImageUplaod from \"../../../shared/components/FormElements/ImageUplaod\";\r\nimport ErrorModal from \"../../../shared/components/UiElements/ErrorModal\";\r\nimport Button from \"../../../shared/components/FormElements/Button\";\r\nimport Input from \"../../../shared/components/FormElements/Input\";\r\nimport { AuthContext } from \"../../../shared/contex/auth-context\";\r\nimport { useHttpClient } from \"../../../shared/hooks/http-hook\";\r\nimport Card from \"../../../shared/components/UiElements/Card\";\r\nimport { useForm } from \"../../../shared/hooks/form-hook\";\r\nimport \"./Auth.css\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../../shared/util/validators\";\r\n\r\n\r\nconst Auth = () => {\r\n  \r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const userEmail = formState.inputs.email.value;\r\n    const userPassword = formState.inputs.password.value;\r\n    let responseData;\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        responseData = await sendRequest(\r\n          \"http://localhost:5000/api/users/login\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: userEmail,\r\n            password: userPassword,\r\n          }),\r\n          {\r\n            \"content-Type\": \"application/json\",\r\n          }\r\n        );\r\n      } catch (error) {}\r\n    } else {\r\n      try {\r\n        const userName = formState.inputs.name.value;\r\n        const userImage = formState.inputs.image.value;\r\n\r\n        const formData = new FormData();\r\n        formData.append('name', userName);\r\n        formData.append('email', userEmail);\r\n        formData.append('password', userPassword);\r\n        formData.append('image', userImage);\r\n\r\n        responseData = await sendRequest(\r\n          \"http://localhost:5000/api/users/signup\",\r\n          \"POST\",\r\n          formData\r\n        );\r\n      } catch (error) {}\r\n    }\r\n    auth.login(responseData.user.id);\r\n  };\r\n\r\n  const onSwitchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setLoginMode((prev) => !prev);\r\n  };\r\n\r\n  const errorHandler = () => {\r\n    clearError();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={errorHandler} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2> {isLoginMode ? \"Login\" : \"Sign Up\"} </h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              type=\"text\"\r\n              id=\"name\"\r\n              label=\"Full Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter your a name\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && <ImageUplaod center onInput={inputHandler} id=\"image\" />}\r\n          <Input\r\n            element=\"input\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password. min 6 characters\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button disabled={!formState.isValid} type=\"submit\">\r\n            {!isLoginMode ? \"Sign Up\" : \"Login\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={onSwitchModeHandler}>\r\n          Switch to {isLoginMode ? \"Sign Up\" : \"Login\"}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}