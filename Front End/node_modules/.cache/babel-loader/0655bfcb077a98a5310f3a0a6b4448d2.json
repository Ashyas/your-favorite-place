{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ash\\\\Desktop\\\\React\\\\your-favorite-place\\\\src\\\\users\\\\pages\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport './Auth.css';\nimport { useForm } from \"../../../shared/hooks/form-hook\";\nimport Card from \"../../../shared/components/UiElements/Card\";\nimport { useHttpClient } from \"../../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../../shared/contex/auth-context\";\nimport Input from \"../../../shared/components/FormElements/Input\";\nimport Button from \"../../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../../shared/components/UiElements/ErrorModal\";\nimport LoadingSpinner from \"../../../shared/components/UiElements/LoadingSpinner\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../../shared/util/validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setLoginMode] = useState(true);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    const userEmail = formState.inputs.email.value;\n    const userPassword = formState.inputs.password.value;\n\n    if (isLoginMode) {\n      await sendRequest('http://localhost:5000/api/users/login', \"POST\", JSON.stringify({\n        email: userEmail,\n        password: userPassword\n      }), {\n        \"content-Type\": \"application/json\"\n      });\n      auth.login();\n    } else {\n      const userName = formState.inputs.name.value;\n      fetch(\"http://localhost:5000/api/users/signup\", {\n        method: \"POST\",\n        headers: {\n          \"content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: userName,\n          email: userEmail,\n          password: userPassword\n        })\n      }).then(response => {\n        const responseData = response.json();\n        setIsLoading(false);\n\n        if (!response.ok) {\n          responseData.then(err => {\n            setError(err.message);\n            throw new Error(err.message);\n          });\n        } else {\n          auth.login();\n        }\n      });\n    }\n  };\n\n  const onSwitchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n\n    setLoginMode(prev => !prev);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"authentication\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", isLoginMode ? \"Login\" : \"Sign Up\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 61\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authSubmitHandler,\n        children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          type: \"text\",\n          id: \"name\",\n          label: \"Full Name\",\n          validators: [VALIDATOR_REQUIRE()],\n          errorText: \"Please enter your a name\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          type: \"email\",\n          id: \"email\",\n          label: \"E-Mail\",\n          validators: [VALIDATOR_EMAIL()],\n          errorText: \"Please enter a valid email\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"password\",\n          type: \"password\",\n          label: \"Password\",\n          validators: [VALIDATOR_MINLENGTH(6)],\n          errorText: \"Please enter a valid password. min 6 characters\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: !formState.isValid,\n          type: \"submit\",\n          children: !isLoginMode ? \"Sign Up\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        inverse: true,\n        onClick: onSwitchModeHandler,\n        children: [\"Switch to \", isLoginMode ? \"Sign Up\" : \"Login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"VAjdl27/198PgLUJhvkKAiho63Q=\", false, function () {\n  return [useHttpClient, useForm];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useContext","useForm","Card","useHttpClient","AuthContext","Input","Button","ErrorModal","LoadingSpinner","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Auth","auth","isLoginMode","setLoginMode","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","email","value","isValid","password","authSubmitHandler","event","preventDefault","userEmail","inputs","userPassword","JSON","stringify","login","userName","name","fetch","method","headers","body","then","response","responseData","json","setIsLoading","ok","err","setError","message","Error","onSwitchModeHandler","undefined","prev","errorHandler"],"sources":["C:/Users/Ash/Desktop/React/your-favorite-place/src/users/pages/Auth/Auth.js"],"sourcesContent":["import React, {useState, useContext} from \"react\";\r\n\r\nimport './Auth.css';\r\nimport { useForm } from \"../../../shared/hooks/form-hook\";\r\nimport Card from \"../../../shared/components/UiElements/Card\";\r\nimport { useHttpClient } from \"../../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../../shared/contex/auth-context\";\r\nimport Input from \"../../../shared/components/FormElements/Input\";\r\nimport Button from \"../../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../../shared/components/UiElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../../shared/components/UiElements/LoadingSpinner\";\r\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../../shared/util/validators\";\r\n\r\n\r\nconst Auth = () => {\r\n    const auth = useContext(AuthContext);\r\n    const [isLoginMode, setLoginMode] = useState(true);\r\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n\r\n    const [formState, inputHandler, setFormData] = useForm({\r\n        email: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        password: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false);\r\n\r\n\r\n    const authSubmitHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const userEmail = formState.inputs.email.value;\r\n        const userPassword = formState.inputs.password.value;\r\n    \r\n        if(isLoginMode) {\r\n           \r\n            await sendRequest(\r\n                'http://localhost:5000/api/users/login',\r\n                \"POST\",\r\n                JSON.stringify({\r\n                    email: userEmail,\r\n                    password: userPassword,\r\n                }),\r\n                {\r\n                    \"content-Type\": \"application/json\"\r\n                }\r\n            );\r\n            \r\n            auth.login();\r\n            \r\n        } else {\r\n            const userName = formState.inputs.name.value;\r\n            fetch(\"http://localhost:5000/api/users/signup\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                \"content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify({\r\n                name: userName,\r\n                email: userEmail,\r\n                password: userPassword,\r\n              }),\r\n            })\r\n            .then((response) => { \r\n                const responseData = response.json();\r\n                setIsLoading(false);\r\n                if(!response.ok) {\r\n                    responseData.then(err => {\r\n                        setError(err.message);\r\n                        throw new Error(err.message);\r\n                    });\r\n                }\r\n                else{\r\n                    auth.login();\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    const onSwitchModeHandler = () => {\r\n        if(!isLoginMode){\r\n            setFormData(\r\n            {\r\n                ...formState.inputs,\r\n                name: undefined\r\n            }, \r\n            formState.inputs.email.isValid && formState.inputs.password.isValid);\r\n        } else{\r\n            setFormData(\r\n            {\r\n                ...formState.inputs,\r\n                name: {\r\n                    value: '',\r\n                    isValid: false\r\n                }\r\n            }, false);\r\n        }\r\n        setLoginMode(prev => !prev);\r\n    }\r\n\r\n    const errorHandler = () => {\r\n        setError(null);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <ErrorModal error={error} onClear={errorHandler}/>\r\n        <Card className=\"authentication\">\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            <h2> { isLoginMode ? \"Login\" : \"Sign Up\" } </h2><hr/>\r\n            <form onSubmit={authSubmitHandler}>\r\n                {!isLoginMode &&\r\n                    <Input \r\n                        element=\"input\"\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        label=\"Full Name\"\r\n                        validators={[VALIDATOR_REQUIRE()]}\r\n                        errorText=\"Please enter your a name\"\r\n                        onInput={inputHandler}\r\n                    />    \r\n                }\r\n                <Input \r\n                    element=\"input\"\r\n                    type='email'\r\n                    id=\"email\"\r\n                    label=\"E-Mail\"\r\n                    validators={[VALIDATOR_EMAIL()]}\r\n                    errorText=\"Please enter a valid email\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Input \r\n                    element=\"input\"\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    validators={[VALIDATOR_MINLENGTH(6)]}\r\n                    errorText=\"Please enter a valid password. min 6 characters\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Button disabled={!formState.isValid} type=\"submit\">{ !isLoginMode? \"Sign Up\" : \"Login\" }</Button>\r\n            </form>\r\n            <Button inverse onClick={onSwitchModeHandler}>Switch to { isLoginMode? \"Sign Up\" : \"Login\" }</Button>\r\n        </Card>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Auth;"],"mappings":"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"},"metadata":{},"sourceType":"module"}