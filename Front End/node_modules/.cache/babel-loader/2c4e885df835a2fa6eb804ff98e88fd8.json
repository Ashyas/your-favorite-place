{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ash\\\\Desktop\\\\React\\\\my-app\\\\src\\\\shared\\\\components\\\\FormElements\\\\Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport \"./Input.css\";\nimport { validate } from \"../../util/validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: '',\n    isValid: false\n  });\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const element = props.element === 'input' ? /*#__PURE__*/_jsxDEV(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.id,\n    rows: props.rowa || 4,\n    onChange: changeHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-control ${!inputState.isValid && 'form-control--invalid'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), element, !inputState.isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Input, \"bEHb4DKiGvwlrs65iwmE6jdXPAg=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useReducer","validate","inputReducer","state","action","type","value","val","isValid","validators","Input","props","inputState","dispatch","changeHandler","event","target","element","id","placeholder","rowa","label","errorText"],"sources":["C:/Users/Ash/Desktop/React/my-app/src/shared/components/FormElements/Input.js"],"sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\nimport \"./Input.css\";\r\nimport { validate } from \"../../util/validators\";\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE' :\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst Input = props =>{\r\n    const [inputState, dispatch] = useReducer(inputReducer, {value: '', isValid: false});\r\n\r\n    const changeHandler = event =>{\r\n        dispatch({type: 'CHANGE', val: event.target.value, validators: props.validators});\r\n    };\r\n\r\n    const element = (\r\n        props.element === 'input' ? \r\n            <input \r\n                id={props.id} \r\n                type={props.type} \r\n                placeholder={props.placeholder} \r\n                onChange={changeHandler}\r\n                value={inputState.value}\r\n            /> :\r\n            <textarea \r\n                id={props.id} \r\n                rows={props.rowa || 4} \r\n                onChange={changeHandler}\r\n                value={inputState.value} \r\n            />\r\n    );\r\n\r\n    return (\r\n        <div className={`form-control ${!inputState.isValid && 'form-control--invalid'}`}>\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n            {element}\r\n            {!inputState.isValid && <p>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,uBAAzB;;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACpC,QAAQA,MAAM,CAACC,IAAf;IACI,KAAK,QAAL;MACI,OAAO,EACH,GAAGF,KADA;QAEHG,KAAK,EAAEF,MAAM,CAACG,GAFX;QAGHC,OAAO,EAAEP,QAAQ,CAACG,MAAM,CAACG,GAAR,EAAaH,MAAM,CAACK,UAApB;MAHd,CAAP;;IAKJ;MACI,OAAON,KAAP;EARR;AAUH,CAXD;;AAaA,MAAMO,KAAK,GAAGC,KAAK,IAAG;EAAA;;EAClB,MAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBb,UAAU,CAACE,YAAD,EAAe;IAACI,KAAK,EAAE,EAAR;IAAYE,OAAO,EAAE;EAArB,CAAf,CAAzC;;EAEA,MAAMM,aAAa,GAAGC,KAAK,IAAG;IAC1BF,QAAQ,CAAC;MAACR,IAAI,EAAE,QAAP;MAAiBE,GAAG,EAAEQ,KAAK,CAACC,MAAN,CAAaV,KAAnC;MAA0CG,UAAU,EAAEE,KAAK,CAACF;IAA5D,CAAD,CAAR;EACH,CAFD;;EAIA,MAAMQ,OAAO,GACTN,KAAK,CAACM,OAAN,KAAkB,OAAlB,gBACI;IACI,EAAE,EAAEN,KAAK,CAACO,EADd;IAEI,IAAI,EAAEP,KAAK,CAACN,IAFhB;IAGI,WAAW,EAAEM,KAAK,CAACQ,WAHvB;IAII,QAAQ,EAAEL,aAJd;IAKI,KAAK,EAAEF,UAAU,CAACN;EALtB;IAAA;IAAA;IAAA;EAAA,QADJ,gBAQI;IACI,EAAE,EAAEK,KAAK,CAACO,EADd;IAEI,IAAI,EAAEP,KAAK,CAACS,IAAN,IAAc,CAFxB;IAGI,QAAQ,EAAEN,aAHd;IAII,KAAK,EAAEF,UAAU,CAACN;EAJtB;IAAA;IAAA;IAAA;EAAA,QATR;EAiBA,oBACI;IAAK,SAAS,EAAG,gBAAe,CAACM,UAAU,CAACJ,OAAZ,IAAuB,uBAAwB,EAA/E;IAAA,wBACI;MAAO,OAAO,EAAEG,KAAK,CAACO,EAAtB;MAAA,UAA2BP,KAAK,CAACU;IAAjC;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKJ,OAFL,EAGK,CAACL,UAAU,CAACJ,OAAZ,iBAAuB;MAAA,UAAIG,KAAK,CAACW;IAAV;MAAA;MAAA;MAAA;IAAA,QAH5B;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CA/BD;;GAAMZ,K;;KAAAA,K;AAiCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}