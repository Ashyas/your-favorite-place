{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ash\\\\Desktop\\\\React\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { BrowserRouter as Router, Navigate, Route, Routes } from \"react-router-dom\";\nimport Users from \"./users/pages/Users\";\nimport \"./App.css\";\nimport NewLocation from \"./locations/pages/NewLocation\";\nimport UserLocations from \"./locations/pages/UserLocations\";\nimport EditLocation from \"./locations/pages/EditLocation\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport Auth from \"./users/pages/Auth/Auth\";\nimport { AuthContext } from \"./shared/contex/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const login = useCallback(() => {\n    setIsLoggedIn(true);\n  }, []);\n  const logout = useCallback(() => {\n    setIsLoggedIn(false);\n  }, []);\n  let routes;\n\n  if (isLoggedIn) {\n    routes = /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/places/new\",\n          element: /*#__PURE__*/_jsxDEV(NewLocation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:userId/places\",\n          element: /*#__PURE__*/_jsxDEV(UserLocations, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/places/:placeId\",\n          element: /*#__PURE__*/_jsxDEV(EditLocation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  } else {\n    routes = /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/auth\",\n          element: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:userId/places\",\n          element: /*#__PURE__*/_jsxDEV(UserLocations, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/auth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      login: login,\n      logout: logout\n    },\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"KA5iiuWE1EZxIUsicX7TgWpqxvU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","BrowserRouter","Router","Navigate","Route","Routes","Users","NewLocation","UserLocations","EditLocation","MainNavigation","Auth","AuthContext","App","isLoggedIn","setIsLoggedIn","login","logout","routes"],"sources":["C:/Users/Ash/Desktop/React/my-app/src/App.js"],"sourcesContent":["import React, { useState, useCallback} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from \"react-router-dom\";\n\nimport Users from \"./users/pages/Users\";\nimport \"./App.css\";\nimport NewLocation from \"./locations/pages/NewLocation\";\nimport UserLocations from \"./locations/pages/UserLocations\";\nimport EditLocation from \"./locations/pages/EditLocation\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport Auth from \"./users/pages/Auth/Auth\";\nimport { AuthContext } from \"./shared/contex/auth-context\";\n\nconst App = () => {\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const login = useCallback(() => {\n    setIsLoggedIn(true);\n  }, []);\n\n  const logout = useCallback(() => {\n    setIsLoggedIn(false);\n  }, []);\n\n  let routes;\n\n  if (isLoggedIn) {\n    routes = (\n      <Routes>\n        <React.Fragment>\n        <Route path=\"/\"  element={<Users />}></Route>\n        <Route path=\"/places/new\" element={<NewLocation />} />\n        <Route path=\"/:userId/places\" element={<UserLocations />} />\n        <Route path=\"/places/:placeId\" element={<EditLocation />} />\n        <Navigate to=\"/\"></Navigate></React.Fragment>\n      </Routes>\n    );\n  }else {\n    routes = (\n      <Routes>\n        <React.Fragment>\n        <Route path=\"/\" element={<Users />} /> \n        <Route path=\"/auth\" element={<Auth />} />\n        <Route path=\"/:userId/places\" element={<UserLocations />} />\n        <Navigate to=\"/auth\"></Navigate></React.Fragment>\n      </Routes>\n    );\n  }\n\n  return (\n    <AuthContext.Provider value={{isLoggedIn: isLoggedIn, login: login, logout: logout}}>\n      <Router>\n        <MainNavigation />\n        <main>\n          {routes}\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}