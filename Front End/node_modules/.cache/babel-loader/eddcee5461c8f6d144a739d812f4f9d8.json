{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback, useRef, useEffect } from \"react\";\nexport const useHttpClient = () => {\n  _s();\n\n  const [error, setError] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const activeHttpRequests = useRef([]);\n  const sendRequest = useCallback(async function (url) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n    let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    setIsLoading(true);\n    const httpAbortCtrll = new AbortController();\n    activeHttpRequests.current.push(httpAbortCtrll);\n\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers,\n        signal: httpAbortCtrll.signal\n      });\n      const responseData = await response.json();\n\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      }\n\n      setIsLoading(false);\n      return responseData;\n    } catch (err) {\n      setError(err.message);\n      setIsLoading(false);\n      throw err;\n    }\n  }, []);\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  };\n};\n\n_s(useHttpClient, \"WHyDvV4HKNri0LZDxmhr9YcxXjk=\");","map":{"version":3,"names":["useState","useCallback","useRef","useEffect","useHttpClient","error","setError","isLoading","setIsLoading","activeHttpRequests","sendRequest","url","method","body","headers","httpAbortCtrll","AbortController","current","push","response","fetch","signal","responseData","json","ok","Error","message","err","clearError","forEach","abortCtrl","abort"],"sources":["C:/Users/Ash/Desktop/React/your-favorite-place/src/shared/hooks/http-hook.js"],"sourcesContent":["import { useState, useCallback, useRef, useEffect } from \"react\"\r\n\r\nexport const useHttpClient = () => {\r\n    const [error, setError] = useState();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const activeHttpRequests = useRef([]);\r\n\r\n    const sendRequest = useCallback (async (url, method = 'GET', body = null, headers = {}) => {\r\n        setIsLoading(true);\r\n        const httpAbortCtrll = new AbortController();\r\n\r\n        activeHttpRequests.current.push(httpAbortCtrll);\r\n        \r\n         try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortCtrll.signal\r\n            });\r\n    \r\n            const responseData = await response.json();\r\n            \r\n            \r\n            if(!response.ok) {\r\n                throw new Error(responseData.message);\r\n            }\r\n\r\n            setIsLoading(false);\r\n            return responseData;\r\n\r\n        } catch (err) {\r\n            setError(err.message);\r\n            setIsLoading(false);\r\n            throw err;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = () => {\r\n        setError(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n        };\r\n    }, [])\r\n\r\n    return {isLoading, error, sendRequest, clearError};\r\n}"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,MAAhC,EAAwCC,SAAxC,QAAyD,OAAzD;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC/B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;EACA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAMS,kBAAkB,GAAGP,MAAM,CAAC,EAAD,CAAjC;EAEA,MAAMQ,WAAW,GAAGT,WAAW,CAAE,gBAAOU,GAAP,EAA0D;IAAA,IAA9CC,MAA8C,uEAArC,KAAqC;IAAA,IAA9BC,IAA8B,uEAAvB,IAAuB;IAAA,IAAjBC,OAAiB,uEAAP,EAAO;IACvFN,YAAY,CAAC,IAAD,CAAZ;IACA,MAAMO,cAAc,GAAG,IAAIC,eAAJ,EAAvB;IAEAP,kBAAkB,CAACQ,OAAnB,CAA2BC,IAA3B,CAAgCH,cAAhC;;IAEC,IAAI;MACD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,EAAM;QAC9BC,MAD8B;QAE9BC,IAF8B;QAG9BC,OAH8B;QAI9BO,MAAM,EAAEN,cAAc,CAACM;MAJO,CAAN,CAA5B;MAOA,MAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA3B;;MAGA,IAAG,CAACJ,QAAQ,CAACK,EAAb,EAAiB;QACb,MAAM,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;MACH;;MAEDlB,YAAY,CAAC,KAAD,CAAZ;MACA,OAAOc,YAAP;IAEH,CAlBA,CAkBC,OAAOK,GAAP,EAAY;MACVrB,QAAQ,CAACqB,GAAG,CAACD,OAAL,CAAR;MACAlB,YAAY,CAAC,KAAD,CAAZ;MACA,MAAMmB,GAAN;IACH;EACJ,CA7B8B,EA6B5B,EA7B4B,CAA/B;;EA+BA,MAAMC,UAAU,GAAG,MAAM;IACrBtB,QAAQ,CAAC,IAAD,CAAR;EACH,CAFD;;EAIAH,SAAS,CAAC,MAAM;IACZ,OAAO,MAAM;MACTM,kBAAkB,CAACQ,OAAnB,CAA2BY,OAA3B,CAAmCC,SAAS,IAAIA,SAAS,CAACC,KAAV,EAAhD;IACH,CAFD;EAGH,CAJQ,EAIN,EAJM,CAAT;EAMA,OAAO;IAACxB,SAAD;IAAYF,KAAZ;IAAmBK,WAAnB;IAAgCkB;EAAhC,CAAP;AACH,CA/CM;;GAAMxB,a"},"metadata":{},"sourceType":"module"}