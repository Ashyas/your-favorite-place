{"ast":null,"code":"const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\nexport const VALIDATOR_REQUIRE = () => ({\n  type: VALIDATOR_TYPE_REQUIRE\n});\n_c = VALIDATOR_REQUIRE;\nexport const VALIDATOR_FILE = () => ({\n  type: VALIDATOR_TYPE_FILE\n});\n_c2 = VALIDATOR_FILE;\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\n_c3 = VALIDATOR_MINLENGTH;\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\n_c4 = VALIDATOR_MAXLENGTH;\nexport const VALIDATOR_MIN = val => ({\n  type: VALIDATOR_TYPE_MIN,\n  val: val\n});\n_c5 = VALIDATOR_MIN;\nexport const VALIDATOR_MAX = val => ({\n  type: VALIDATOR_TYPE_MAX,\n  val: val\n});\n_c6 = VALIDATOR_MAX;\nexport const VALIDATOR_EMAIL = () => ({\n  type: VALIDATOR_TYPE_EMAIL\n});\n_c7 = VALIDATOR_EMAIL;\nexport const validate = (value, validators) => {\n  let isValid = true;\n\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n\n  return isValid;\n};\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"VALIDATOR_REQUIRE\");\n$RefreshReg$(_c2, \"VALIDATOR_FILE\");\n$RefreshReg$(_c3, \"VALIDATOR_MINLENGTH\");\n$RefreshReg$(_c4, \"VALIDATOR_MAXLENGTH\");\n$RefreshReg$(_c5, \"VALIDATOR_MIN\");\n$RefreshReg$(_c6, \"VALIDATOR_MAX\");\n$RefreshReg$(_c7, \"VALIDATOR_EMAIL\");","map":{"version":3,"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_MIN","VALIDATOR_TYPE_MAX","VALIDATOR_TYPE_EMAIL","VALIDATOR_TYPE_FILE","VALIDATOR_REQUIRE","type","VALIDATOR_FILE","VALIDATOR_MINLENGTH","val","VALIDATOR_MAXLENGTH","VALIDATOR_MIN","VALIDATOR_MAX","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test"],"sources":["C:/Users/Ash/Desktop/React/my-app/src/shared/util/validators.js"],"sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"mappings":"AAAA,MAAMA,sBAAsB,GAAG,SAA/B;AACA,MAAMC,wBAAwB,GAAG,WAAjC;AACA,MAAMC,wBAAwB,GAAG,WAAjC;AACA,MAAMC,kBAAkB,GAAG,KAA3B;AACA,MAAMC,kBAAkB,GAAG,KAA3B;AACA,MAAMC,oBAAoB,GAAG,OAA7B;AACA,MAAMC,mBAAmB,GAAG,MAA5B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,OAAO;EAAEC,IAAI,EAAER;AAAR,CAAP,CAA1B;KAAMO,iB;AACb,OAAO,MAAME,cAAc,GAAG,OAAO;EAAED,IAAI,EAAEF;AAAR,CAAP,CAAvB;MAAMG,c;AACb,OAAO,MAAMC,mBAAmB,GAAGC,GAAG,KAAK;EACzCH,IAAI,EAAEP,wBADmC;EAEzCU,GAAG,EAAEA;AAFoC,CAAL,CAA/B;MAAMD,mB;AAIb,OAAO,MAAME,mBAAmB,GAAGD,GAAG,KAAK;EACzCH,IAAI,EAAEN,wBADmC;EAEzCS,GAAG,EAAEA;AAFoC,CAAL,CAA/B;MAAMC,mB;AAIb,OAAO,MAAMC,aAAa,GAAGF,GAAG,KAAK;EAAEH,IAAI,EAAEL,kBAAR;EAA4BQ,GAAG,EAAEA;AAAjC,CAAL,CAAzB;MAAME,a;AACb,OAAO,MAAMC,aAAa,GAAGH,GAAG,KAAK;EAAEH,IAAI,EAAEJ,kBAAR;EAA4BO,GAAG,EAAEA;AAAjC,CAAL,CAAzB;MAAMG,a;AACb,OAAO,MAAMC,eAAe,GAAG,OAAO;EAAEP,IAAI,EAAEH;AAAR,CAAP,CAAxB;MAAMU,e;AAEb,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,UAAR,KAAuB;EAC7C,IAAIC,OAAO,GAAG,IAAd;;EACA,KAAK,MAAMC,SAAX,IAAwBF,UAAxB,EAAoC;IAClC,IAAIE,SAAS,CAACZ,IAAV,KAAmBR,sBAAvB,EAA+C;MAC7CmB,OAAO,GAAGA,OAAO,IAAIF,KAAK,CAACI,IAAN,GAAaC,MAAb,GAAsB,CAA3C;IACD;;IACD,IAAIF,SAAS,CAACZ,IAAV,KAAmBP,wBAAvB,EAAiD;MAC/CkB,OAAO,GAAGA,OAAO,IAAIF,KAAK,CAACI,IAAN,GAAaC,MAAb,IAAuBF,SAAS,CAACT,GAAtD;IACD;;IACD,IAAIS,SAAS,CAACZ,IAAV,KAAmBN,wBAAvB,EAAiD;MAC/CiB,OAAO,GAAGA,OAAO,IAAIF,KAAK,CAACI,IAAN,GAAaC,MAAb,IAAuBF,SAAS,CAACT,GAAtD;IACD;;IACD,IAAIS,SAAS,CAACZ,IAAV,KAAmBL,kBAAvB,EAA2C;MACzCgB,OAAO,GAAGA,OAAO,IAAI,CAACF,KAAD,IAAUG,SAAS,CAACT,GAAzC;IACD;;IACD,IAAIS,SAAS,CAACZ,IAAV,KAAmBJ,kBAAvB,EAA2C;MACzCe,OAAO,GAAGA,OAAO,IAAI,CAACF,KAAD,IAAUG,SAAS,CAACT,GAAzC;IACD;;IACD,IAAIS,SAAS,CAACZ,IAAV,KAAmBH,oBAAvB,EAA6C;MAC3Cc,OAAO,GAAGA,OAAO,IAAI,iBAAiBI,IAAjB,CAAsBN,KAAtB,CAArB;IACD;EACF;;EACD,OAAOE,OAAP;AACD,CAvBM"},"metadata":{},"sourceType":"module"}