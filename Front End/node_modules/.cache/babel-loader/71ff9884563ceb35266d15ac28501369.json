{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ash\\\\Desktop\\\\React\\\\your-favorite-place\\\\Front End\\\\src\\\\locations\\\\pages\\\\EditLocation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport LoadingSpinner from \"../../shared/components/UiElements/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UiElements/ErrorModal\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { AuthContext } from \"../../shared/contex/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport Card from \"../../shared/components/UiElements/Card\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./LocationForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditLocation = () => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [laodedPlasce, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const navigate = useNavigate();\n  const auth = useContext(AuthContext);\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:5000/api/places/${placeId}`);\n        setLoadedPlace(responseData.place);\n        setFormData({\n          title: {\n            value: responseData.place.title,\n            isValid: true\n          },\n          description: {\n            value: responseData.place.description,\n            isValid: true\n          }\n        }, true);\n      } catch (error) {}\n    };\n\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const submitEditHandler = async event => {\n    event.preventDefault();\n\n    try {\n      await sendRequest(`http://localhost:5000/api/places/${placeId}`, \"PATCH\", JSON.stringify({\n        title: formState.inputs.title.value,\n        description: formState.inputs.description.value\n      }), {\n        \"Content-Type\": \"application/json\"\n      });\n      navigate('/' + auth.userId + '/places');\n    } catch (error) {}\n  };\n\n  if (!laodedPlasce && !error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Could not find the location \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onCleaar: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), !isLoading && laodedPlasce && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"place-form\",\n      onSubmit: submitEditHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"title\",\n        element: \"input\",\n        type: \"text\",\n        label: \"Title\",\n        validators: [VALIDATOR_REQUIRE()],\n        errorText: \"Enter a valid title\",\n        onInput: inputHandler,\n        initialValue: laodedPlasce.title,\n        initialValid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"description\",\n        element: \"textarea\",\n        label: \"Description\",\n        validators: [VALIDATOR_MINLENGTH(5)],\n        errorText: \"Enter a valid description! min 5 characters\",\n        onInput: inputHandler,\n        initialValue: laodedPlasce.description,\n        initialValid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formState.isValid,\n        children: \"Update Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        danger: true,\n        to: \"/users\",\n        children: \" Cencel \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditLocation, \"KVaa9lKbCwyPWXCsUJtF2gGzGYA=\", false, function () {\n  return [useHttpClient, useParams, useNavigate, useForm];\n});\n\n_c = EditLocation;\nexport default EditLocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditLocation\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useParams","useNavigate","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","LoadingSpinner","ErrorModal","Button","Input","AuthContext","useHttpClient","Card","useForm","EditLocation","isLoading","error","sendRequest","clearError","laodedPlasce","setLoadedPlace","placeId","navigate","auth","formState","inputHandler","setFormData","title","value","isValid","description","fetchPlace","responseData","place","submitEditHandler","event","preventDefault","JSON","stringify","inputs","userId"],"sources":["C:/Users/Ash/Desktop/React/your-favorite-place/Front End/src/locations/pages/EditLocation.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\r\nimport LoadingSpinner from \"../../shared/components/UiElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UiElements/ErrorModal\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport { AuthContext } from \"../../shared/contex/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport Card from \"../../shared/components/UiElements/Card\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport \"./LocationForm.css\";\r\n\r\n\r\n\r\nconst EditLocation = () => {\r\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n    const [laodedPlasce, setLoadedPlace] = useState();\r\n    const placeId = useParams().placeId;\r\n    const navigate = useNavigate();\r\n    const auth = useContext(AuthContext);\r\n    \r\n    const [formState, inputHandler, setFormData] = useForm({\r\n        title: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        description: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false);\r\n\r\n    useEffect(() => {\r\n        const fetchPlace = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `http://localhost:5000/api/places/${placeId}`\r\n                );\r\n                setLoadedPlace(responseData.place);\r\n                setFormData({\r\n                    title: {\r\n                        value: responseData.place.title,\r\n                        isValid: true\r\n                    },\r\n                    description: {\r\n                        value: responseData.place.description,\r\n                        isValid: true\r\n                    }\r\n                }, true);     \r\n            } catch (error) { }\r\n        } \r\n        fetchPlace();\r\n    }, [sendRequest, placeId, setFormData]);\r\n\r\n\r\n    const submitEditHandler = async (event) => {\r\n      event.preventDefault();\r\n      try {\r\n        await sendRequest(\r\n            `http://localhost:5000/api/places/${placeId}`,\r\n            \"PATCH\",\r\n            JSON.stringify({\r\n              title: formState.inputs.title.value,\r\n              description: formState.inputs.description.value,\r\n            }),\r\n            {\r\n              \"Content-Type\": \"application/json\",\r\n            }\r\n        );\r\n        navigate('/' + auth.userId + '/places');\r\n      } catch (error) {}\r\n    };\r\n\r\n    if(!laodedPlasce && !error){\r\n        return (\r\n        <div className=\"center\">\r\n            <Card>\r\n                <h2>Could not find the location </h2>\r\n            </Card>\r\n        </div>);\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onCleaar={clearError} />\r\n            {isLoading && \r\n            <div className=\"center\">\r\n                <LoadingSpinner  asOverlay/>\r\n            </div> }\r\n            {!isLoading && laodedPlasce &&\r\n            <form className=\"place-form\" onSubmit={submitEditHandler}>\r\n                <Input \r\n                    id=\"title\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Title\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Enter a valid title\"\r\n                    onInput={inputHandler}\r\n                    initialValue={laodedPlasce.title}\r\n                    initialValid={true} \r\n                />\r\n                <Input \r\n                    id=\"description\"\r\n                    element=\"textarea\"\r\n                    label=\"Description\"\r\n                    validators={[VALIDATOR_MINLENGTH(5)]}\r\n                    errorText=\"Enter a valid description! min 5 characters\"\r\n                    onInput={inputHandler}\r\n                    initialValue={laodedPlasce.description}\r\n                    initialValid={true} \r\n                />\r\n                <Button type=\"submit\" disabled={!formState.isValid}>Update Location</Button>\r\n                <Button danger to=\"/users\"> Cencel </Button>\r\n            </form>}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default EditLocation;"],"mappings":"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"},"metadata":{},"sourceType":"module"}